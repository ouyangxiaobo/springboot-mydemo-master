<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.mydemo.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.github.mydemo.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, birthday
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.mydemo.model.User">
    insert into user (id, username, password, 
      birthday)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.github.mydemo.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.mydemo.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.mydemo.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectUserByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username,jdbcType=VARCHAR}

  </select>


  <select id="selectLikeUsers" parameterType="java.lang.String" resultType="com.github.mydemo.model.User">
    select
    <include refid="Base_Column_List" />
    from user

    <where>
      <if test="username !=null">
        and username like CONCAT('%',#{username},'%')
      </if>
    </where>

  </select>

  <delete id="deleteMoreUsersAnother" parameterType="Integer[]">

    delete from user where id in
    <foreach collection="array" item="userIds" index="no" open="("
             separator="," close=")">
      #{userIds}
    </foreach>
  </delete>



  <select id="queryAllUsers"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user

  </select>

  <select id="pageAllUsers"  parameterType="com.github.mydemo.model.vo.UserExt" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
     where 1=1
    <if test="username !=null">
       and username like CONCAT ('%',#{username},'%')
    </if>
    <if test="password !=null">
       and password like CONCAT ('%',#{password},'%')
    </if>
    <if test="startTime !=null and startTime !=''">
      and birthday  &gt;= CONCAT('','${startTime}',' 00:00:00')

    </if>
    <if test="endTime !=null and endTime !=''">
      and birthday   &lt;=CONCAT('','${endTime}',' 23:59:59')
    </if>

    order by birthday desc
  </select>




</mapper>